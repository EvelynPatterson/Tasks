my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times = 10)
rep(c(0, 1, 2), each = 10)
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data = 1:20,nrow = 4, ncol = 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data)
colnames(my_data) <- cnames
my_data
TRUE == TRUE
(FALSE == FALSE) == FALSE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 !== 7
5 !TRUE 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(0)
any(< 0)
any(ints < 0)
all(ints > 0)
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function("My first function!")
boring_function
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11, 5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x[1]}, c(8, 4, 0))
evaluate(function(x){x[length(x)]}, c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
submit()
telegram("hi", "everyone")
submit()
mad_libs("car", "large", "seatbelt")
submit()
'I' %p% 'love' %p% 'R!'
data(cars)
?cars
head(cars)
plot(cars)
?plot()
?plot
plot(x = cars$speed, y = cars$dist)
plot(x = cars$dist, y = cars$speed)
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance", xlab = "Speed")
plot(cars, main = "My Plot")
plot(cars, sub = "My Plot Subtitle")
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
plot(cars, pch = 2)
data(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
library(httr)set_config(config(ssl_verifypeer = OL))
library(httr)set_config(config(ssl_verifypeer = 0L))
install.packages(httr)
library(httr)
library("httr")
set_config(config(ssl_verifypeer = 0L))
install.packages("httr")
setwd('~/Desktop/Evolution/Tasks/Task_07')
install.packages("phytools")
install.packages("ape")
library(phytools)
library(ape)
text.string <- "(((((((cow, pig), whale),(bat, (lemur, human))), (robin, iguana)), coelacanth), (gold_fish, trout)), shark);"
vert.tree<- read.tree(text=text.string)
plot(vert.tree, edge.width=2)
nodelabels(frame="circle", bg='white', cex=1)
vert.tree
str(vert.tree)
tree<- read.tree(text="(((A,B), (C,D)), E);")
plotTree(tree, offset=1)
tiplabels(frame="circle", bg='lightblue', cex=1)
nodelabels(frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree<- force.ultrametric(read.tree("https://jonsmitchell.com/data/anolis.tre"))
AnolisTree<- force.ultrametric(read.tree('~/Desktop/Evolution/Tasks/Task_07/anolis.tre'))
par(las=1)
hist(AnolisTree$edge.length, col='black', border='white', main="", xlab="edge lengths for the Anolis tree", ylim=c(0,50), xlim=c(0,6))
tipEdges<- which(AnolisTree$edge[,2]<= Ntip(AnolisTree))
Lengths<- AnolisTree$edge.length
names(Lengths)<- AnolisTree$tip.label
names(Lengths)[which(Lengths==min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs<- sapply(AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex=0.25)
?plot.phylo
plot(AnolisTree, type="phylogram", show.tip.label=FALSE, cex=0.25)
plot(AnolisTree, type="radical", cex=0.25)
plot(AnolisTree, type="radical", cex=0.25)
plot(AnolisTree, type="radial", cex=0.25)
eCols<- rep("black", 162)
(eCols[tipEdges]="red")
plot(AnolisTree, type="phylogram", cex=0.25, edge.col=eCols)
plot(AnolisTree, type="phylogram", use.edge.length=TRUE, node.pos=NULL, show.tip.label=F, show.node.label=FALSE, edge.color=NULL, edge.width=NULL, edge.lty=NULL, node.color=NULL, node.width=NULL, node.lty=NULL, font=3, cex=0.25, adj=NULL, srt=0, no.margin=FALSE, root.edge=FALSE, label.offset=0, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color=par("col"), plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)
plot(AnolisTree, type="fan", use.edge.length=TRUE, node.pos=NULL, show.tip.label=F, show.node.label=FALSE, edge.color=NULL, edge.width=NULL, edge.lty=NULL, node.color=NULL, node.width=NULL, node.lty=NULL, font=3, cex=0.25, adj=NULL, srt=0, no.margin=FALSE, root.edge=FALSE, label.offset=0, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color=par("col"), plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)
plot(AnolisTree, type="phylogram", use.edge.length=TRUE, node.pos=NULL,  show.tip.label=TRUE, edge.width=NULL, edge.lty=NULL, eCols[tipEdges], node.color=NULL, node.width=NULL, node.lty=NULL, adj=0.5, srt=0, no.margin=TRUE, root.edge=FALSE, label.offset=1, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color='black', plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)
plot.phylo(AnolisTree, type="phylogram", cex=0.25, edge.color='red')
eCols<- rep("black", 162)
eCols[tipEdges]<- "red"
plot(AnolisTree, cex=0.25, edge.col=eCols)
str(AnolisTree)
plot(eCols[AnolisTree$tipEdges])
plot(AnolisTree, type="phylogram", use.edge.length=TRUE, node.pos=NULL, show.tip.label=F,   show.node.label=FALSE, edge.color=NULL, edge.width=NULL, edge.lty=NULL, eCols[tipEdges], node.color=NULL, node.width=NULL, node.lty=NULL, adj=0.5, srt=0, no.margin=TRUE, root.edge=FALSE, label.offset=1, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color='black', plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)
plot.phylo(AnolisTree, type="phylogram", cex=0.25, edge.color='red')
eCols<- rep("black", 162)
plot(AnolisTree, type="phylogram", use.edge.length=TRUE, node.pos=NULL, show.tip.label=F,   show.node.label=FALSE, edge.color=NULL, edge.width=NULL, edge.lty=NULL, eCols[tipEdges], node.color=NULL, node.width=NULL, node.lty=NULL, adj=0.5, srt=0, no.margin=TRUE, root.edge=FALSE, label.offset=1, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color='black', plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)#
plot.phylo(AnolisTree, type="phylogram", cex=0.25, edge.color='red')#
eCols<- rep("black", 162)#
eCols[tipEdges]<- "red"#
plot(AnolisTree, cex=0.25, edge.col=eCols)#
str(AnolisTree)
pdf('notiplabels.pdf')#
plot(AnolisTree, type="phylogram", use.edge.length=TRUE, node.pos=NULL, show.tip.label=F, show.node.label=FALSE, edge.color=NULL, edge.width=NULL, edge.lty=NULL, node.color=NULL, node.width=NULL, node.lty=NULL, font=3, cex=0.25, adj=NULL, srt=0, no.margin=FALSE, root.edge=FALSE, label.offset=0, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color=par("col"), plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)#
dev.off()
pdf('treecricle.pdf')#
plot(AnolisTree, type="fan", use.edge.length=TRUE, node.pos=NULL, show.tip.label=F, show.node.label=FALSE, edge.color=NULL, edge.width=NULL, edge.lty=NULL, node.color=NULL, node.width=NULL, node.lty=NULL, font=3, cex=0.25, adj=NULL, srt=0, no.margin=FALSE, root.edge=FALSE, label.offset=0, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color=par("col"), plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)#
dev.off()
pdf('redtipstree.pdf')#
plot(AnolisTree, type="phylogram", use.edge.length=TRUE, node.pos=NULL, show.tip.label=F,   show.node.label=FALSE, edge.color=NULL, edge.width=NULL, edge.lty=NULL, eCols[tipEdges], node.color=NULL, node.width=NULL, node.lty=NULL, adj=0.5, srt=0, no.margin=TRUE, root.edge=FALSE, label.offset=1, underscore=FALSE, x.lim=NULL, y.lim=NULL, direction="rightwards", lab4ut=NULL, tip.color='black', plot=TRUE, rotate.tree=0, open.angle=0, node.depth=1, align.tip.label=FALSE)#
plot.phylo(AnolisTree, type="phylogram", cex=0.25, edge.color='red')#
eCols<- rep("black", 162)#
eCols[tipEdges]<- "red"#
plot(AnolisTree, cex=0.25, edge.col=eCols)#
str(AnolisTree)#
dev.off()
shortedgelength<- which.min(Lengths)
shortedgelength
?drop.tip
AnolisTree2<-drop.tip(AnolisTree, tip=shortedgelength)
plot(AnolisTree2,cex=0.25)
Ntip(AnolisTree)
ltt(AnolisTree)
abline(0,1,lwd=2, col='red', lty=2)
Ntip(AnolisTree)
Ntip(AnolisTree2)
ltt(AnolisTree)
abline(0,1,lwd=2, col='red', lty=2)
fit.bd(AnolisTree,b=NULL,d=NULL,rho=0.2)
setwd('~/Desktop/Evolution/Tasks/Task_07')
plot(tree,type="fan")
ltt(AnolisTree)
abline(0,1,lwd=2, col='red', lty=2)
fit.bd(AnolisTree,b=NULL,d=NULL,rho=0.2)
pdf('007_plot01.pdf')#
ltt(AnolisTree)#
abline(0,1,lwd=2, col='red', lty=2)#
fit.bd(AnolisTree,b=NULL,d=NULL,rho=0.2)#
dev.off()
setwd('~/Desktop/Evolution/Tasks/Task_07')
plot(tree,type="fan")
data<- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
data<- read.csv(https://jonsmitchell.com/data/svl.csv,stringsAsFactors=F, row.names=1)
data<- read.csv("https://jonsmitchell.com/data/svl.csv",stringsAsFactors=F, row.names=1)
data<- read.csv("svl.csv",stringsAsFactors=F, row.names=1)
data<- read.csv("svl.csv",stringsAsFactors=F, row.names=1)
svl<-setNames(data$svl,rownames(data))
Ancestors<-fastAnc(tree,svl,vars=TRUE, CI=TRUE)
Ancestors<-fastAnc(AnolisTree,svl,vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16,cex=0.25*svl[tree$tip.label])
nodelabels(pch=16,cex=0.25*Ancestors$ace)
obj<- contMap(AnolisTree,svl,plot=F)
plot(obj,legend=0.7*max(nodeHeights(AnolisTree)), sig=2,fsize=c(0.7,0.9))
fossilData<- data.frame(svl=log(c(25.4,23.2,17.7,19.7,24,31)),tip1=c("Anolis_aliniger","Anolis_aliniger","Anolis_occultus","Anolis_ricordii","Anolis_cristatellus","Anolis_occultus"),tip2=c("Anolis_chlorocyanus","Anolis_coelestinus","Anolis_hendersoni","Anolis_cybotes","Anolis_angusticeps","Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for (i in 1:nrow(fossilData)){#
	Node<- fastMRCA(AnolisTree,fossilData[i, "tip1"],#
	fossilData[i, "tip2"])#
	fossilNodes[i]<-fossilData[i,"svl"]#
	nodeN[i]<-Node#
	names(fossilNodes)<-nodeN#
}
Ancestors_withFossils<-fastAnc(AnolisTree,svl,anc.states=fossilNodes,CI=TRUE, var=TRUE)
data<- read.csv("svl.csv",stringsAsFactors=F, row.names=1)
svl<-setNames(data$svl,rownames(data))
Ancestors<-fastAnc(AnolisTree,svl,vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree,type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16,cex=0.25*svl[tree$tip.label])
nodelabels(pch=16,cex=0.25*Ancestors$ace)
obj<- contMap(AnolisTree,svl,plot=F)
plot(obj,legend=0.7*max(nodeHeights(AnolisTree)), sig=2,fsize=c(0.7,0.9))
pdf('fossiltree.pdf')#
data<- read.csv("svl.csv",stringsAsFactors=F, row.names=1)#
svl<-setNames(data$svl,rownames(data))#
Ancestors<-fastAnc(AnolisTree,svl,vars=TRUE, CI=TRUE)#
par(mar=c(0.1,0.1,0.1,0.1))#
plot(tree,type="fan", lwd=2, show.tip.label=F)#
tiplabels(pch=16,cex=0.25*svl[tree$tip.label])#
nodelabels(pch=16,cex=0.25*Ancestors$ace)#
obj<- contMap(AnolisTree,svl,plot=F)#
plot(obj,legend=0.7*max(nodeHeights(AnolisTree)), sig=2,fsize=c(0.7,0.9))#
dev.off()
fossilData<- data.frame(svl=log(c(25.4,23.2,17.7,19.7,24,31)),tip1=c("Anolis_aliniger","Anolis_aliniger","Anolis_occultus","Anolis_ricordii","Anolis_cristatellus","Anolis_occultus"),tip2=c("Anolis_chlorocyanus","Anolis_coelestinus","Anolis_hendersoni","Anolis_cybotes","Anolis_angusticeps","Anolis_angusticeps"))
fossilNodes<-c()
nodeN<-c()
for (i in 1:nrow(fossilData)){#
	Node<- fastMRCA(AnolisTree,fossilData[i, "tip1"],#
	fossilData[i, "tip2"])#
	fossilNodes[i]<-fossilData[i,"svl"]#
	nodeN[i]<-Node#
	names(fossilNodes)<-nodeN#
}
Ancestors_withFossils<-fastAnc(AnolisTree,svl,anc.states=fossilNodes,CI=TRUE, var=TRUE)
